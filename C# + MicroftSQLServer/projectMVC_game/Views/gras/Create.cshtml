@model projectMVC_game.Models.gra

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<style>
    .error{
        color:red;
    }
</style>

@using (Html.BeginForm("Create", "gras", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <h5>Are you sure you want to create this?</h5>
    <div class="form-horizontal">
        <h4>gra</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "error" })
        <div class="form-group">
            @Html.LabelFor(model => model.id_gra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.id_gra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.id_gra, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nazwa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nazwa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nazwa, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ograniczenie_wiekowe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ograniczenie_wiekowe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ograniczenie_wiekowe, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gatunek, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gatunek, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gatunek, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.platforma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.platforma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.platforma, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="col-md-10">$</span>
                @Html.EditorFor(model => model.cena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cena, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.release_year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.release_year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.release_year, "", new { @class = "error" })
            </div>
        </div>

             <div class="form-group">
         <div class="col-md-offset-2 col-md-10">
             <input type="submit" value="Create" class="btn btn-default" />
         </div>
     </div>   
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
